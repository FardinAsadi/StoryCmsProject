<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "Index";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2><#= ModelMetadata.EntitySetName #></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>

<#
    }
#>

<#
}
#>
<p>
    <button type="button" class="btn  btn-success">افزودن آیتم جدید</button>
</p>
<div class="createParent">
    <form method="post" data-controlername="<#= ModelMetadata.EntitySetName #>" data-actionname="Create">
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
		@Html.HiddenFor(x => x.Id)
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation) {
#>
        <div class="form-group">
<#
        // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
        if (property.IsPrimaryKey && IsPropertyGuid(property)) {
            continue;
        }

        if (property.IsForeignKey) {
#>
            @Html.LabelFor(model => model.<#= property.PropertyName #>, "<#= GetAssociationName(property) #>", new { @class = "control-label col-md-2" })
<#
        } else {
#>
            @Html.LabelFor(model => model.<#= property.PropertyName #>, new { @class = "control-label col-md-2" })
<#
        }
#>
            <div class="col-md-10">
<#
        if (property.IsForeignKey) {
#>
                @Html.DropDownList("<#= property.PropertyName #>", String.Empty)
<#
        } else {
#>
                @Html.EditorFor(model => model.<#= property.PropertyName #>)
<#
        }
#>
                @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
            </div>
        </div>

<#
    }
}
#>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" onclick="formPost(this)" value="ایجاد" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>
</div>
<div class="ListParent">
    <table id="table_id" class="display"></table>
</div>
@section scripts{
    <script>
        var dataTable;
        function formPost(elem) {
            var form = $(elem).closest("form");
            if (form.valid()) {
                var postUrl = "/" + form.attr("data-controlerName") + "/" + form.attr("data-actionName");
                $.ajax({
                    type: "post",
                    url: postUrl,
                    data: form.serialize(),
                    success: function(m) {
                        form.attr("data-actionName", "Create");
                        form.find("[type=button]").attr("value", "ایجاد");
                        dataTable.ajax.reload();
                    }
                });
            }
        }
    </script>
    
    <script type="text/javascript">
        $(function() {
            dataTable = $('#table_id')
                .DataTable({
                    serverSide: true,
                    processing: true,
                    scroll: true,
                    scrollY: 200,
                    deferRender: true,
                    dom: "lfrtiS",
                    ajax: {
                        url: '@Url.Action("List")',
                        type: "POST"
                    },
                    columns: [
                        { data: "Row", title: "شماره" },
						<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation && !property.IsPrimaryKey) {
#>
                        { data: "<#= property.PropertyName #>", title: "کد", sortable: true },
						<#}}#>
                        {
                            data: "Id", title: "عملیات ها", mRender: function (data, type, row) {
                                return "<a href='#' class='editItem' onclick='GetById(" + data + ")'>ویرایش</a>" + "&nbsp;" +
                                    "<a href='#' class='editItem' onclick='DeleteById(" + data + ")'>حذف</a>";
                            }
                        }
                    ]
                });
        });

        function DeleteById(id) {
            var r = confirm("Delete!");
            if (r == true) {
                $.ajax({
                    type: "post",
                    url: "@Url.Action("Delete")",
                    data: { id: id },
                    success: function(m) {
                        //alert(m);
                        dataTable.ajax.reload();
                    }
                });
            } else {
                //alert("You pressed Cancel!");
            }
        }    
        function GetById(id) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetById")",
                data: { id: id },
                success: function (result) {
                    var form = $("form[data-actionName]");
                    form.attr("data-actionName", "Edit");
					<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation && !property.IsPrimaryKey) {
#>
                    form.find("[name=<#= property.PropertyName #>]").val(result.<#= property.PropertyName #>);
						<#}}#>
                    
                    form.find("[type=button]").attr("value", "ویرایش");
                }
            });
        }
    </script>
}
<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>


<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>